{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\CodeCraft_WD_05\\\\weather-app\\\\src\\\\pages\\\\Home\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport './index.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [location, setLocation] = useState(\"\");\n  const [weatherData, setWeatherData] = useState(null);\n  const [error, setError] = useState(\"\");\n  const API_KEY = \"9589fed1e485f8c0b62e0f328612ccaf\";\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      fetchWeatherByCoords(latitude, longitude);\n    }, () => {\n      setError(\"Unable to retrieve location.\");\n    });\n  }, []);\n  const fetchWeatherByCity = async e => {\n    if (e.key === \"Enter\" || e.type === \"click\") {\n      try {\n        const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${location}&units=metric&appid=${API_KEY}`);\n        setWeatherData(response.data);\n        setError(\"\");\n      } catch (err) {\n        setError(\"City not found. Please try again.\");\n      }\n    }\n  };\n  const fetchWeatherByCoords = async (lat, lon) => {\n    try {\n      const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&appid=${API_KEY}`);\n      setWeatherData(response.data);\n      setError(\"\");\n    } catch (error) {\n      setError(\"Coordinates are not found\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter city\",\n        value: location,\n        onChange: e => setLocation(e.target.value),\n        onKeyDown: fetchWeatherByCity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchWeatherByCity,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-magnifying-glass fa-lg\",\n          style: {\n            color: \"#74C0FC\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 23\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: weatherData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", weatherData.main.temp, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Weather Conditions: \", weatherData.weather[0].description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Humidity: \", weatherData.main.humidity, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Wind Speed: \", (weatherData.wind.speed * 3.6).toFixed(), \" m/s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"+qri3YMbBNG9IReyUKN1CP0qgw8=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Home","_s","location","setLocation","weatherData","setWeatherData","error","setError","API_KEY","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","fetchWeatherByCoords","fetchWeatherByCity","e","key","type","response","get","data","err","lat","lon","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","target","onKeyDown","onClick","style","color","name","main","temp","weather","description","humidity","wind","speed","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/CodeCraft_WD_05/weather-app/src/pages/Home/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from \"axios\";\r\nimport './index.scss';\r\n\r\nconst Home = () => {\r\n    const [location, setLocation] = useState(\"\");\r\n    const [weatherData, setWeatherData] = useState(null);\r\n    const [error, setError] = useState(\"\");\r\n    const API_KEY = \"9589fed1e485f8c0b62e0f328612ccaf\";\r\n\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n            const { latitude, longitude } = position.coords;\r\n            fetchWeatherByCoords(latitude, longitude);\r\n        }, () => {\r\n            setError(\"Unable to retrieve location.\");\r\n        });\r\n    }, []);\r\n\r\n    const fetchWeatherByCity = async (e) => {\r\n        if (e.key === \"Enter\" || e.type === \"click\") {\r\n            try {\r\n                const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${location}&units=metric&appid=${API_KEY}`);\r\n                setWeatherData(response.data);\r\n                setError(\"\");\r\n            } catch (err) {\r\n                setError(\"City not found. Please try again.\");\r\n            }\r\n        }\r\n    };\r\n\r\n    const fetchWeatherByCoords = async (lat, lon) => {\r\n        try {\r\n            const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&appid=${API_KEY}`);\r\n            setWeatherData(response.data);\r\n            setError(\"\");\r\n        } catch (error) {\r\n            setError(\"Coordinates are not found\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='main'>\r\n            <h1>Weather Information</h1>\r\n            <div className=\"input-area\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter city\"\r\n                    value={location}\r\n                    onChange={(e) => setLocation(e.target.value)}\r\n                    onKeyDown={fetchWeatherByCity} \r\n                />\r\n                <button onClick={fetchWeatherByCity}>\r\n                    <i className=\"fa-solid fa-magnifying-glass fa-lg\" style={{ color: \"#74C0FC\" }}></i>\r\n                </button>\r\n            </div>\r\n\r\n            {error && <p className='error'>{error}</p>}\r\n\r\n            {weatherData && (\r\n                <div className='weather'>\r\n                    <h2>{weatherData.name}</h2>\r\n                    <p>Temperature: {weatherData.main.temp}Â°C</p>\r\n                    <p>Weather Conditions: {weatherData.weather[0].description}</p>\r\n                    <p>Humidity: {weatherData.main.humidity}%</p>\r\n                    <p>Wind Speed: {(weatherData.wind.speed * 3.6).toFixed()} m/s</p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}