{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\CodeCraft_WD_05\\\\weather-app\\\\src\\\\pages\\\\Home\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport './index.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [location, setLocation] = useState(\"\");\n  const [weatherData, setWeatherData] = useState(null);\n  const [error, setError] = useState(\"\");\n  const API_KEY = \"9589fed1e485f8c0b62e0f328612ccaf\";\n  const handleSearch = e => {\n    e.preventDefault();\n  };\n  const handleKeyDown = (e, location) => {\n    if (e.key === \"Enter\") {\n      fetchWeatherByCity(location);\n    }\n  };\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      fetchWeatherByCoords(latitude, longitude);\n    }, () => {\n      setError(\"Unable to retrieve location.\");\n    });\n  }, []);\n  const fetchWeatherByCity = async city => {\n    try {\n      const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${API_KEY}`);\n      setWeatherData(response.data);\n      setError(\"\");\n    } catch (err) {\n      setError(\"City not found. Please try again.\");\n    }\n  };\n  const fetchWeatherByCoords = async (lat, lon) => {\n    try {\n      const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&appid=${API_KEY}`);\n      setWeatherData(response.data);\n      setError(\"\");\n    } catch (error) {\n      setError(\"Coordinates are not found\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather Informations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter city\",\n        value: location,\n        onChange: e => setLocation(e.target.value),\n        onKeyDown: () => fetchWeatherByCity(location)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => fetchWeatherByCity(location),\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-magnifying-glass fa-lg\",\n          style: {\n            color: \"#74C0FC\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 22\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: weatherData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", weatherData.main.temp, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Weather Conditions: \", weatherData.weather[0].description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Humidity: \", weatherData.main.humidity, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"+qri3YMbBNG9IReyUKN1CP0qgw8=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Home","_s","location","setLocation","weatherData","setWeatherData","error","setError","API_KEY","handleSearch","e","preventDefault","handleKeyDown","key","fetchWeatherByCity","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","fetchWeatherByCoords","city","response","get","data","err","lat","lon","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","onKeyDown","onClick","style","color","name","main","temp","weather","description","humidity","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/CodeCraft_WD_05/weather-app/src/pages/Home/index.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport axios from \"axios\";\r\nimport './index.scss';\r\n\r\n\r\nconst Home = () => {\r\n    const [location, setLocation] = useState(\"\");\r\n    const [weatherData, setWeatherData] = useState(null);\r\n    const [error, setError] = useState(\"\");\r\n    const API_KEY = \"9589fed1e485f8c0b62e0f328612ccaf\";\r\n\r\n    const handleSearch = (e) => {\r\n        e.preventDefault();\r\n    };\r\n\r\n    const handleKeyDown = (e,location) => {\r\n        if (e.key === \"Enter\") {\r\n            fetchWeatherByCity(location);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n            const {latitude, longitude} = position.coords;\r\n            fetchWeatherByCoords(latitude, longitude);\r\n        }, () => {\r\n            setError(\"Unable to retrieve location.\")\r\n        })\r\n    }, []);\r\n\r\n    const fetchWeatherByCity = async (city) => {\r\n        try {\r\n            const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${API_KEY}`);\r\n            setWeatherData(response.data);\r\n            setError(\"\");\r\n        } catch (err) {\r\n            setError(\"City not found. Please try again.\");\r\n        }\r\n    };\r\n\r\n    const fetchWeatherByCoords = async (lat, lon) => {\r\n        try {\r\n            const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&appid=${API_KEY}`);\r\n            setWeatherData(response.data);\r\n            setError(\"\")\r\n\r\n        } catch (error) {\r\n            setError(\"Coordinates are not found\")\r\n        }\r\n\r\n    };\r\n    return (\r\n        <div className='main'>\r\n            <h1>Weather Informations</h1>\r\n            <div className=\"input-area\">\r\n                <input type=\"text\" placeholder=\"Enter city\"\r\n                    value={location}\r\n                    onChange={\r\n                        (e) => setLocation(e.target.value)\r\n                    }\r\n                    onKeyDown={()=>fetchWeatherByCity(location)}/>\r\n                <button onClick={\r\n                    () => fetchWeatherByCity(location)\r\n                }>\r\n                    <i className=\"fa-solid fa-magnifying-glass fa-lg\"\r\n                        style={\r\n                            {color: \"#74C0FC\"}\r\n                    }></i>\r\n                </button>\r\n\r\n            </div>\r\n\r\n            {\r\n            error && <p className='error'>\r\n                {error}</p>\r\n        }\r\n            {\r\n            weatherData && (\r\n                <div className='weather'>\r\n                    <h2>{\r\n                        weatherData.name\r\n                    }</h2>\r\n                    <p>Temperature: {\r\n                        weatherData.main.temp\r\n                    }Â°C</p>\r\n                    <p>Weather Conditions: {\r\n                        weatherData.weather[0].description\r\n                    }</p>\r\n                    <p>Humidity: {\r\n                        weatherData.main.humidity\r\n                    }%</p>\r\n                </div>\r\n            )\r\n        } </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}