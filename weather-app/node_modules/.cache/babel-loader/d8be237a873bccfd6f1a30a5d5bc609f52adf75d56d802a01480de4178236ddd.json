{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\CodeCraft_WD_05\\\\weather-app\\\\src\\\\pages\\\\Home\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [location, setLocation] = useState(\"\");\n  const [weatherData, setWeatherData] = useState(null);\n  const [error, setError] = useState(\"\");\n  const API_KEY = \"9589fed1e485f8c0b62e0f328612ccaf\";\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      fetchWeatherByCoords(latitude, longitude);\n    }, () => {\n      setError(\"Unable to retrieve location.\");\n    });\n  }, []);\n  const fetchWeatherByCity = async city => {\n    try {\n      const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${API_KEY}`);\n      setWeatherData(response.data);\n      setError(\"\");\n    } catch (err) {\n      setError(\"City not found. Please try again.\");\n    }\n  };\n  const fetchWeatherByCoords = async (lat, lon) => {\n    try {\n      const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&appid=${API_KEY}`);\n      setWeatherData(response.data);\n      setError(\"\");\n    } catch (error) {\n      setError(\"Coordinates are not found\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u015E\\u0259h\\u0259r daxil edin\",\n      value: location,\n      onChange: e => setLocation(e.target.value),\n      style: {\n        padding: \"10px\",\n        fontSize: \"16px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => fetchWeatherByCity(location),\n      style: {\n        marginLeft: \"10px\",\n        padding: \"10px 20px\"\n      },\n      children: \"Axtar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 22\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: weatherData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperatur: \", weatherData.main.temp, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Hava \\u015E\\u0259rtl\\u0259ri: \", weatherData.weather[0].description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"R\\xFCtub\\u0259t: \", weatherData.main.humidity, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"+qri3YMbBNG9IReyUKN1CP0qgw8=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Home","_s","location","setLocation","weatherData","setWeatherData","error","setError","API_KEY","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","fetchWeatherByCoords","fetchWeatherByCity","city","response","get","data","err","lat","lon","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","style","padding","fontSize","onClick","marginLeft","color","marginTop","name","main","temp","weather","description","humidity","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/CodeCraft_WD_05/weather-app/src/pages/Home/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axios from \"axios\";\r\n\r\nconst Home = () => {\r\n    const [location, setLocation] = useState(\"\");\r\n    const [weatherData, setWeatherData] = useState(null);\r\n    const [error, setError] = useState(\"\");\r\n    const API_KEY = \"9589fed1e485f8c0b62e0f328612ccaf\";\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n            const {latitude, longitude} = position.coords;\r\n            fetchWeatherByCoords(latitude, longitude);\r\n        }, () => {\r\n            setError(\"Unable to retrieve location.\")\r\n        })\r\n    }, []);\r\n\r\n    const fetchWeatherByCity = async (city) => {\r\n        try {\r\n            const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${API_KEY}`);\r\n            setWeatherData(response.data);\r\n            setError(\"\");\r\n        } catch (err) {\r\n            setError(\"City not found. Please try again.\");\r\n        }\r\n    };\r\n\r\n    const fetchWeatherByCoords = async (lat, lon) => {\r\n        try {\r\n            const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&appid=${API_KEY}`);\r\n            setWeatherData(response.data);\r\n            setError(\"\")\r\n\r\n        } catch (error) {\r\n            setError(\"Coordinates are not found\")\r\n        }\r\n\r\n    };\r\n  return (\r\n    <div>\r\n         <h1>Weather</h1>\r\n            <input type=\"text\" placeholder=\"Şəhər daxil edin\"\r\n                value={location}\r\n                onChange={\r\n                    (e) => setLocation(e.target.value)\r\n                }\r\n                style={\r\n                    {\r\n                        padding: \"10px\",\r\n                        fontSize: \"16px\"\r\n                    }\r\n                }/>\r\n            <button onClick={\r\n                    () => fetchWeatherByCity(location)\r\n                }\r\n                style={\r\n                    {\r\n                        marginLeft: \"10px\",\r\n                        padding: \"10px 20px\"\r\n                    }\r\n            }>\r\n                Axtar\r\n            </button>\r\n\r\n            {\r\n            error && <p style={\r\n                {color: \"red\"}\r\n            }>\r\n                {error}</p>\r\n        }\r\n\r\n            {\r\n            weatherData && (\r\n                <div style={\r\n                    {marginTop: \"20px\"}\r\n                }>\r\n                    <h2>{\r\n                        weatherData.name\r\n                    }</h2>\r\n                    <p>Temperatur: {\r\n                        weatherData.main.temp\r\n                    }°C</p>\r\n                    <p>Hava Şərtləri: {\r\n                        weatherData.weather[0].description\r\n                    }</p>\r\n                    <p>Rütubət: {\r\n                        weatherData.main.humidity\r\n                    }%</p>\r\n                </div>\r\n            )\r\n        } \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}