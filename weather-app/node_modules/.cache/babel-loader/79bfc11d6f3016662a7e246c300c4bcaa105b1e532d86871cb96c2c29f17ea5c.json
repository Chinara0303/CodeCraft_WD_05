{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\CodeCraft_WD_05\\\\weather-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [location, setLocation] = useState(\"\");\n  const [weatherData, setWeatherData] = useState(null);\n  const [error, setError] = useState(\"\");\n  const API_KEY = \"9589fed1e485f8c0b62e0f328612ccaf3\";\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      fet;\n    });\n  });\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      fetchWeatherByCoords(latitude, longitude);\n    }, err => {\n      setError(\"Mövqeyi əldə etmək mümkün olmadı.\");\n    });\n  }, []);\n\n  // Şəhərə görə hava məlumatlarını gətir\n  const fetchWeatherByCity = async city => {\n    try {\n      const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${API_KEY}`);\n      setWeatherData(response.data);\n      setError(\"\");\n    } catch (err) {\n      setError(\"Şəhər tapılmadı. Zəhmət olmasa yenidən yoxlayın.\");\n    }\n  };\n\n  // Koordinatlara görə hava məlumatlarını gətir\n  const fetchWeatherByCoords = async (lat, lon) => {\n    try {\n      const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&appid=${API_KEY}`);\n      setWeatherData(response.data);\n      setError(\"\");\n    } catch (error) {\n      setError(\"Coordinates are not found\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hava M\\u0259lumatlar\\u0131\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u015E\\u0259h\\u0259r daxil edin\",\n      value: location,\n      onChange: e => setLocation(e.target.value),\n      style: {\n        padding: \"10px\",\n        fontSize: \"16px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => fetchWeatherByCity(location),\n      style: {\n        marginLeft: \"10px\",\n        padding: \"10px 20px\"\n      },\n      children: \"Axtar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 22\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: weatherData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperatur: \", weatherData.main.temp, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Hava \\u015E\\u0259rtl\\u0259ri: \", weatherData.weather[0].description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"R\\xFCtub\\u0259t: \", weatherData.main.humidity, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"yJd+gowF+OOGvmHs4wMCnOv5eks=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","location","setLocation","weatherData","setWeatherData","error","setError","API_KEY","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","fet","fetchWeatherByCoords","err","fetchWeatherByCity","city","response","get","data","lat","lon","style","textAlign","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","fontSize","onClick","marginLeft","color","marginTop","name","main","temp","weather","description","humidity","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/CodeCraft_WD_05/weather-app/src/App.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport axios from \"axios\";\n\nconst App = () => {\n    const [location, setLocation] = useState(\"\");\n    const [weatherData, setWeatherData] = useState(null);\n    const [error, setError] = useState(\"\");\n    const API_KEY = \"9589fed1e485f8c0b62e0f328612ccaf3\";\n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition((position) => {\n            const {latitude, longitude} = position.coords;\n            fet\n        })\n    })\n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition((position) => {\n            const {latitude, longitude} = position.coords;\n            fetchWeatherByCoords(latitude, longitude);\n        }, (err) => {\n            setError(\"Mövqeyi əldə etmək mümkün olmadı.\");\n        });\n    }, []);\n\n    // Şəhərə görə hava məlumatlarını gətir\n    const fetchWeatherByCity = async (city) => {\n        try {\n            const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${API_KEY}`);\n            setWeatherData(response.data);\n            setError(\"\");\n        } catch (err) {\n            setError(\"Şəhər tapılmadı. Zəhmət olmasa yenidən yoxlayın.\");\n        }\n    };\n\n    // Koordinatlara görə hava məlumatlarını gətir\n    const fetchWeatherByCoords = async (lat, lon) => {\n        try {\n            const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&appid=${API_KEY}`);\n            setWeatherData(response.data);\n            setError(\"\")\n\n        } catch (error) {\n            setError(\"Coordinates are not found\")\n        }\n\n    };\n\n    return (\n        <div style={\n            {\n                textAlign: \"center\",\n                padding: \"20px\"\n            }\n        }>\n            <h1>Hava Məlumatları</h1>\n            <input type=\"text\" placeholder=\"Şəhər daxil edin\"\n                value={location}\n                onChange={\n                    (e) => setLocation(e.target.value)\n                }\n                style={\n                    {\n                        padding: \"10px\",\n                        fontSize: \"16px\"\n                    }\n                }/>\n            <button onClick={\n                    () => fetchWeatherByCity(location)\n                }\n                style={\n                    {\n                        marginLeft: \"10px\",\n                        padding: \"10px 20px\"\n                    }\n            }>\n                Axtar\n            </button>\n\n            {\n            error && <p style={\n                {color: \"red\"}\n            }>\n                {error}</p>\n        }\n\n            {\n            weatherData && (\n                <div style={\n                    {marginTop: \"20px\"}\n                }>\n                    <h2>{\n                        weatherData.name\n                    }</h2>\n                    <p>Temperatur: {\n                        weatherData.main.temp\n                    }°C</p>\n                    <p>Hava Şərtləri: {\n                        weatherData.weather[0].description\n                    }</p>\n                    <p>Rütubət: {\n                        weatherData.main.humidity\n                    }%</p>\n                </div>\n            )\n        } </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}